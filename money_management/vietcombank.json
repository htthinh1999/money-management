{
  "id": "18f8fc312c72bb95",
  "threadId": "18f8f8c73ae0615d",
  "labelIds": ["UNREAD", "CATEGORY_PERSONAL", "INBOX"],
  "snippet": "Vietcombank 1900 54 54 13 Vietcombank https://portal.vietcombank.com.vn Biên lai chuyển tiền qua tài khoản (Payment Receipt) Ngày, giờ giao dịch Trans. Date, Time 14:31 Chủ Nhật 19/05/2024 Số lệnh giao",
  "payload": {
    "partId": "",
    "mimeType": "text/html",
    "filename": "",
    "headers": [
      { "name": "Delivered-To", "value": "htthinh1999@gmail.com" },
      {
        "name": "Received",
        "value": "by 2002:a05:6020:908e:b0:2df:1db7:5ed4 with SMTP id w14csp69812wdf;        Sun, 19 May 2024 00:31:17 -0700 (PDT)"
      },
      {
        "name": "X-Google-Smtp-Source",
        "value": "AGHT+IEA6LXK6ogO2HMFH5iD4Wq70NFx/gB5hqGOYTpS/cv9D5LdhZDcSWqB7aDmgiAZCHz0tmlX"
      },
      {
        "name": "X-Received",
        "value": "by 2002:a05:6a20:432b:b0:1ad:7e4f:9564 with SMTP id adf61e73a8af0-1b1ca3c3e80mr5127850637.9.1716103877245;        Sun, 19 May 2024 00:31:17 -0700 (PDT)"
      },
      {
        "name": "ARC-Seal",
        "value": "i=1; a=rsa-sha256; t=1716103877; cv=none;        d=google.com; s=arc-20160816;        b=aawsITjH65puL1mx1FqJcRkXIj+hTVbk+Azdks7TpwVB3EvvBYIR5ngG5C93722guu         daKOvDXC0iOiQwBMvGPPh7PA2AkhoR3O2qFxgs1ngl+nHOn4OXB4TwzPSlszCaZVOpiI         DMaJNwIjCXhfl5N75ruyN328j4BjrpNEb6A6E8qs2HXYZ88McbE/6Ite5NbQA5Jo8SlD         2Dgv2Sq36JmFYY+hBOYdu4+P+2IGZWv7opJfTWIWwmIVNmxaRWtmSpFJjsoTlqWNd1r4         BVUMU0aynP/Eof9E0XywesvjLmyfsOtZDgZ2DvpFemE04VgOhMhuMxtMCput2H1oxYuY         BB3Q=="
      },
      {
        "name": "ARC-Message-Signature",
        "value": "i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;        h=content-transfer-encoding:subject:date:importance:priority:to:from         :message-id:mime-version:dkim-signature;        bh=cHCpBwI1AqQ9HgJwNA0BwGLZ38BfipCdjEpqocUSlZM=;        fh=wSmAj1/fdmE6Jir2H3Z0IfGzahciPy9jFgm4oquoeR8=;        b=cAPAStkQ8t8FnEvED8CgLUdF+knjRe31YEXeIMtwX6kYuq5WJt68YfYGd7QIxl+neD         R7jAJ0+EvXR/cOuWVY4leQhj3BQffhkwhJh7Y6qrnI7Ys+ewFAxo0D5QZAIzCuP+CevU         W+AeY0F8QBf0oc8tJ99l4YGEQ1SviS/He7Qq35ExEQrmeu+O6gSYVRtMeQkeEOy+cp4l         WqikaMllj0GAAazY8rJnV/DFnwWSpeHks/RuiiUCLIb4ALIjpPnd5F3BrxN7xJmyXN7V         8W7sPY/kJsFP0psJrfc0UlVvNTV39nFaOuG/jPhHkyxAbKC2Q5Y6vZHdEvDwotUP+Wss         FvLw==;        dara=google.com"
      },
      {
        "name": "ARC-Authentication-Results",
        "value": "i=1; mx.google.com;       dkim=pass header.i=@info.vietcombank.com.vn header.s=selector02 header.b=D1rRViCu;       spf=pass (google.com: domain of vcbdigibank@info.vietcombank.com.vn designates 103.11.173.53 as permitted sender) smtp.mailfrom=VCBDigibank@info.vietcombank.com.vn;       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=info.vietcombank.com.vn"
      },
      {
        "name": "Return-Path",
        "value": "<VCBDigibank@info.vietcombank.com.vn>"
      },
      {
        "name": "Received",
        "value": "from info.vietcombank.com.vn (info.vietcombank.com.vn. [103.11.173.53])        by mx.google.com with ESMTPS id 41be03b00d2f7-6550c9a3de0si3867314a12.794.2024.05.19.00.31.16        for <htthinh1999@gmail.com>        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);        Sun, 19 May 2024 00:31:17 -0700 (PDT)"
      },
      {
        "name": "Received-SPF",
        "value": "pass (google.com: domain of vcbdigibank@info.vietcombank.com.vn designates 103.11.173.53 as permitted sender) client-ip=103.11.173.53;"
      },
      {
        "name": "Authentication-Results",
        "value": "mx.google.com;       dkim=pass header.i=@info.vietcombank.com.vn header.s=selector02 header.b=D1rRViCu;       spf=pass (google.com: domain of vcbdigibank@info.vietcombank.com.vn designates 103.11.173.53 as permitted sender) smtp.mailfrom=VCBDigibank@info.vietcombank.com.vn;       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=info.vietcombank.com.vn"
      },
      {
        "name": "DKIM-Signature",
        "value": "v=1; a=rsa-sha256; d=info.vietcombank.com.vn; s=selector02; c=relaxed/simple; q=dns/txt; i=@info.vietcombank.com.vn; t=1716103876; x=1747639876; h=From:Sender:Reply-To:Subject:Date:Message-ID:To:Cc:MIME-Version:Content-Type: Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:Resent-From: Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:List-Id: List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive; bh=cHCpBwI1AqQ9HgJwNA0BwGLZ38BfipCdjEpqocUSlZM=; b=D1rRViCuGIKHlY3wqJgGyibbf2kpj+9vVqhFfCkazqiTV0MFv8lts0zDkj/j0TOF lio9F6SE7QW9SobRdTno9KokKfJCII+FmttKGIbJYwQpUgEkxDdpqRm1XOqPvoZo 7tQ1I9SXwElhTi6g9KHVZIMYzq5AUX9ABWQvu/KJPXSfiBry81GBeuaYPN+QramD JZfzZNraoP8tN+kQeh8gj7PHBlTMbaiRNDdhshEs15Oea7kHChg4w7Uf4cN4CD5+ J9GdZd2J47UfJmMEF+qxM+tROVyDRoGKDtS79veRzOY22i/py4szONB3Yj8NJ6sx VlITxNoan0DlUemqYcC2Dg==;"
      },
      {
        "name": "X-AuditID",
        "value": "c0a8c635-cd2dca8000002007-d3-6649aac436d6"
      },
      {
        "name": "Received",
        "value": "from MBSVC-DC03 (Unknown_Domain [192.168.198.54]) (using TLS with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits)) (Client did not present a certificate) by info.vietcombank.com.vn (Symantec Messaging Gateway INFO) with SMTP id 79.D7.08199.4CAA9466; Sun, 19 May 2024 14:31:16 +0700 (+07)"
      },
      { "name": "MIME-Version", "value": "1.0" },
      {
        "name": "Message-ID",
        "value": "<79.D7.08199.4CAA9466@info.vietcombank.com.vn>"
      },
      { "name": "From", "value": "VCBDigibank@info.vietcombank.com.vn" },
      { "name": "To", "value": "htthinh1999@gmail.com" },
      { "name": "X-Priority", "value": "1" },
      { "name": "Priority", "value": "urgent" },
      { "name": "Importance", "value": "high" },
      { "name": "Date", "value": "19 May 2024 14:31:16 +0700" },
      { "name": "Subject", "value": "Biên lai chuyển tiền qua tài khoản" },
      { "name": "Content-Type", "value": "text/html; charset=utf-8" },
      { "name": "Content-Transfer-Encoding", "value": "base64" },
      {
        "name": "X-Brightmail-Tracker",
        "value": "H4sIAAAAAAAAA+NgFvrLJMWRmVeSWpSXmKPExsVyYMUxM90jqzzTDNadELGYOfkeuwOjx85Z d9kDGKO4bFJSczLLUov07RK4Mi6tKSzYdZC54tOXP+wNjGe2MHcxcnJICJhIvDg4lb2LkYtD SGAjk8TE/XMYQRK8AoISJ2c+Yeli5ACyrSRWHA0GMdkENCVOHTEHqRARkJQ48ucaK8QYXokp c0+yg9gCAgIS0xdeBrM5gexf7bNYQGwWAQWJpZ19TCC2sECMxJdjW9hBRjILqEksa1UCCTML KEpM6X7IPoGRdxaSG2YhVM1CUrWAkXkVo0xxbnpmXlq+gaFeWWZqSXJ+blJiXrYekNYry9vE CAkh0x2Mb77/0DvEyMTBeIhRgoNZSYT3VJR7mhBvSmJlVWpRfnxRaU5q8SFGaQ4WJXHeH5uO pAoJpCeWpGanphakFsFkmTg4pRqYulcnTtqgdVdxA2NJ+3blZ2bvdxh8rrDSbF+4YvkelRP7 vquJcz3jUtr3q+LN/B9vrjou/aZyeLbXD43s29UHPTbqHZ10+aaQxpmSwvb8o7svt837a8Vt zHtc7ObXQ39m3hUu+DmlMdpnostDVv/fm3Uskp6nd8XdjrB5X7DqaPUJhSRPwckSaUZz58wT T7r99t7cPlvVHfPPdaR/EulPCLnuudVEs8MuYk71LM3X1/9d8olzeFx3XET829bVh5Kyufon 9Cbddqmd93Kyu5L8pK1frntwV9/oMj65flrdh1e/9XJnC5tunzprV/uyW1UCb2W1fqRlftAx YLA1WvP8Q3NVoVuqCQfLkQMTPM+eUlRiKc5INNRiLipOBADUyVCXkAIAAA=="
      }
    ],
    "body": {
      "size": 41911,
      "data": ""
    }
  },
  "sizeEstimate": 63159,
  "historyId": "3151996",
  "internalDate": "1716103876000"
}
